# CONFIG_TYPE=JAVA_LIB
# CONFIG_VERSION=1.0
#####################################################################################################################
# Documentation: https://bitbucket.org/zepben/how-tos/src/master/bitbucket_pipelines/release-management.md
# Custom Images used: https://bitbucket.org/zepben/vm-container-images/
#####################################################################################################################

image: zepben/pipeline-java

options:
  max-time: 30

definitions:
  zep-basic-image: &zep-basic-image
    image: zepben/pipeline-basic:3.0.0

  steps:
    - step: &build-test-step
        name: Build and Test
        caches:
          - maven
        script:
          - mvn clean test -f pom.xml -Dserver.username=$NEXUS_USERNAME -Dserver.password=$NEXUS_PASSWORD -Dserver.repo.url=$NEXUS_MAVEN_REPO
    - step: &release-step
        name: Package and Upload artifact
        image: zepben/release-pipeline-java
        caches:
          - maven
        script:
          - mvn clean deploy -f pom.xml -Dserver.username=$NEXUS_USERNAME -Dserver.password=$NEXUS_PASSWORD -Dserver.repo.url=$NEXUS_MAVEN_REPO -Dserver.release.url=$NEXUS_MAVEN_RELEASE -Dserver.snapshot.url=$NEXUS_MAVEN_SNAPSHOT
          - version=$(xmlstarlet pyx pom.xml | grep -v ^A | xmlstarlet p2x | xmlstarlet sel -t -v "/project/version")
          - artifactId=$(xmlstarlet pyx pom.xml | grep -v ^A | xmlstarlet p2x | xmlstarlet sel -t -v "/project/artifactId")
          - export artifact="${artifactId}-${version}.jar"
          - pipe: atlassian/slack-notify:0.3.6
            variables:
              WEBHOOK_URL: $SLACK_WEBHOOK
              MESSAGE: "$artifact is available."
    - step: &check-licence-step
        name: Check licence files and headers
        caches:
          - lc
        script:
          - curl -o ~/lc/licence-checker -L https://$BB_AUTH_STRING@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${LICENCE_CHECKER_REPO}/downloads/licence-checker
          - chmod +x ~/lc/licence-checker
          - find -regextype posix-egrep -regex "(COPYING|.*\.(py|java|kt|cs|proto|js|ts))$" | xargs -n1 ~/lc/licence-checker 
  caches:
    lc: ~/lc

pipelines:
  branches:
    master:
      - step: *check-licence-step
      - step: *release-step
    LTS/*:
      - step: *check-licence-step
      - step: *release-step
    hotfix/*:
      - step: *check-licence-step
      - step: *release-step
  pull-requests:
    '**':
      - step: *check-licence-step
      - step: *build-test-step

  custom:
    create-release:
      - step:
          name: Release checks and update version
          <<: *zep-basic-image
          script:
            - java-mvn-release-checks pom.xml
            - java-mvn-finalize-version pom.xml
            - version=$(xmlstarlet pyx pom.xml | grep -v ^A | xmlstarlet p2x | xmlstarlet sel -t -v "/project/version")
            - echo $version >> version.txt
            - artifactId=$(xmlstarlet pyx pom.xml | grep -v ^A | xmlstarlet p2x | xmlstarlet sel -t -v "/project/artifactId")
            - echo $artifactId >> artifactid.txt
          artifacts:
            - version.txt
            - artifactid.txt
      - step:
          name: Package and Upload artifact
          image: zepben/release-pipeline-java
          caches:
            - maven
          script:
            - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
            - git fetch --all
            - git checkout release
            - set +e
            - mvn deploy -f pom.xml -Dserver.username=$NEXUS_USERNAME -Dserver.password=$NEXUS_PASSWORD -Dserver.repo.url=$NEXUS_MAVEN_REPO -Dserver.release.url=$NEXUS_MAVEN_RELEASE -Dserver.snapshot.url=$NEXUS_MAVEN_SNAPSHOT; ret=$?
            - set -e
            - if [ $ret -ne 0 ]; then
            - git push origin -d release
            - echo "There was an error in the mvn deploy command above."
            - exit $ret
            - else
            - git remote set-url origin "https://${BB_AUTH_STRING}@bitbucket.org/$BITBUCKET_REPO_FULL_NAME"
            - git checkout $BITBUCKET_BRANCH
            - git merge release
            - git push origin $BITBUCKET_BRANCH
            - version=$(cat ./version.txt)
            - artifactId=$(cat ./artifactid.txt)
            - git tag "v$version"
            - git push --tags
            - export artifact="${artifactId}-${version}.jar"
            - pipe: atlassian/slack-notify:0.3.6
              variables:
                WEBHOOK_URL: $SLACK_WEBHOOK
                MESSAGE: "$artifact is available."
            - fi
      - step:
          name: Update to next version
          <<: *zep-basic-image
          script:
            - java-mvn-update-version --release pom.xml

    create-LTS-branch:
      - step:
          <<: *zep-basic-image
          name: Create LTS branch
          script:
            - create-branch --lts
            - export BITBUCKET_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            - java-mvn-update-version pom.xml

    create-hotfix-branch:
      - step:
          <<: *zep-basic-image
          name: Create Hotfix branch
          script:
            - create-branch --hotfix
            - export BITBUCKET_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            - java-mvn-update-version pom.xml
